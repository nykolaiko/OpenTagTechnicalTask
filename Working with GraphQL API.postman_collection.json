{
	"info": {
		"_postman_id": "e7c9adca-aea2-4d15-a7c5-d055a9ca09b1",
		"name": "Working with GraphQL API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5793629"
	},
	"item": [
		{
			"name": "1.1 Query all Films \"id\", \"title\" and set value to \"a_new_hope_id\" variable",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"var films = jsonData.data.allFilms.films;",
							"var aNewHopeID = films.find((film) => film.title === \"A New Hope\").id;",
							"postman.setEnvironmentVariable(\"a_new_hope_id\", aNewHopeID);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query FilmID {\n  allFilms {\n    films {\n      id\n      title\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2 Query all Species in \"A New Hope Movie\" and store their names into \"a_new_hope_all_species\" variable",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"var species = jsonData.data.film.speciesConnection.species;",
							"var speciesNames = species.map((specie) => specie.name);",
							"postman.setEnvironmentVariable(\"a_new_hope_all_species\", speciesNames);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query SpeciesInANewHopeMovie($id: ID) {\n  film(id: $id) {\n    speciesConnection {\n      species {\n        name\n      }\n    }\n  }\n}",
						"variables": "{\n    \"id\" : \"{{a_new_hope_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.1 Query DroidID and set value to \"droid_id\" variable",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"var allSpecies = jsonData.data.allSpecies.species;",
							"var droidID = allSpecies.find((specie) => specie.name === \"Droid\").id;",
							"postman.setEnvironmentVariable(\"droid_id\", droidID);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": " query DroidID {\n  allSpecies {\n    species {\n      name\n      id\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2 Query “name”, “birthYear”, “homeWorld”, “eyeColor” for the person “Droid”",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query PersonsDroidAttributes($id: ID) {\n  species(id: $id) {\n    personConnection {\n      people {\n        name\n        birthYear\n        homeworld {\n          name\n        }\n        eyeColor\n      }\n    }\n  }\n}",
						"variables": "{\n    \"id\": \"{{droid_id}}\"\n}"
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Query \"totalCount\",  “id”,  “name” and  “gender” of all people that have participated in the movie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query allPeople {\n  allPeople {\n    totalCount\n    people {\n      id\n      name\n      gender\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.1. Query \"id\" of all People and set value to \"person_id_4\" variable",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var decodedPersonID4 = \"people:4\";",
							"var encodedPersonID4 = btoa(decodedPersonID4);",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"var allPeople = jsonData.data.allPeople.people;",
							"var personID4 = allPeople.find((person) => person.id === encodedPersonID4).id;",
							"postman.setEnvironmentVariable(\"person_id_4\", personID4);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ID {\n  allPeople {\n    people {\n      id\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "4.2 Query “name”, “birthYear”, “homeWorld”, “eyeColor”, \"starshipName\"  for the person with \"id = 4\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query AllPeople($id: ID) {\n  person(id: $id) {\n    name\n    birthYear\n    homeworld {\n      name\n    }\n    eyeColor\n    starshipConnection {\n      starships {\n        name\n      }\n    }\n  }\n}",
						"variables": "{\n    \"id\": \"{{person_id_4}}\"\n}"
					}
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				}
			},
			"response": []
		}
	]
}